on:
  push:
    paths:
    - '**.rs'
    - 'Cargo.lock'
    - 'Cargo.toml'
  pull_request:
    paths:
    - '**.rs'
    - 'Cargo.lock'
    - 'Cargo.toml'

name: Continuous-integration

jobs:
  check:
    name: Check
    runs-on: ubuntu-20.04 # https://github.com/actions/runner-images/issues/6697
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-check-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all
      - uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all --no-default-features --features opengl

  test:
    name: Test Suite
    runs-on: ubuntu-20.04 # https://github.com/actions/runner-images/issues/6697
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: sudo apt install libxkbcommon-dev
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-test-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --no-default-features --features opengl

  fmt:
    name: Rustfmt
    runs-on: ubuntu-20.04 # https://github.com/actions/runner-images/issues/6697
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-20.04 # https://github.com/actions/runner-images/issues/6697
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-clippy-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all -- -D warnings
  
  poeditor:
    name: POEditor
    runs-on: ubuntu-20.04 # https://github.com/actions/runner-images/issues/6697
    steps:
      - uses: actions/checkout@v2
      - name: Push terms to POEditor
        run: curl -X POST https://api.poeditor.com/v2/projects/upload
          -F api_token="${{ secrets.POEDITOR_API_TOKEN }}"
          -F id="${{ secrets.POEDITOR_PROJECT_ID }}"
          -F updating="terms_translations"
          -F language="en"
          -F file=@"locale/en.json"
